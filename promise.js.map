{"version":3,"file":"promise.js","sources":["../src/js/promise.js"],"sourcesContent":["// const promise = new Promise((resolve, reject) => {\n//   const random = Math.random();\n//     setTimeout(() => {\n//       if (random > 0.5) {\n//         resolve('ok');\n//       }\n//       reject('oops');\n//     }, 1000);\n\n//   if (random > 0.5) {\n//     resolve('ok');\n//   }\n//   reject('oops');\n// });\n\n// promise\n//   .then(result => {\n//     console.log(result);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   })\n//   .finally(() => {\n//     console.log('finally');\n//   });\n\n// ===========//\n\n// const number = new Promise((resolve, regect) => {\n//   resolve(5);\n// });\n\n// number\n//   .then(data => {\n//     return data * 2;\n//   })\n//   .then(data => {\n//     return data * 3;\n//   })\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   });\n\n// =========//\n\n// const promise = new Promise(resolve => {\n//   resolve(10);\n// });\n\n// promise\n//   .then(value => {\n//     return new Promise(resolve => {\n//       resolve(value * 2);\n//     });\n//   })\n//   .then(value => {\n//     console.log(value);\n//   });\n\n//==========//\n\n// console.log('step 1');\n\n// setTimeout(() => {\n//   console.log('step 2');\n// }, 0);\n\n// new Promise(resolve => {\n//   resolve('step 3');\n// })\n//   .then(data => {\n//     console.log(data);\n//     return `step 5`;\n//   })\n//   .then(data => console.log(data));\n\n// setTimeout(() => {\n//   console.log('step 4');\n// }, 0);\n\n// console.log('step 6');\n\n//=============//\n\n// const makeOrder = (dish, onSuccess, onError) => {\n//   const random = Math.random();\n\n//   setTimeout(() => {\n//     if (random > 0.5) {\n//       onSuccess(`sale ${dish}`);\n//       return;\n//     }\n//     onError('end');\n//   }, 1000);\n// };\n\n// makeOrder(\n//   'car',\n//   str => console.log('onSuccess', str),\n//   str => console.log('onError', str)\n// );\n\n//============//\n\n// const makeOrder = dish => {\n//   return new Promise((resolve, reject) => {\n//     const random = Math.random();\n//     setTimeout(() => {\n//       if (random > 0.5) {\n//         resolve(`sale ${dish}`);\n//       }\n//       reject('end');\n//     }, 1000);\n//   });\n// };\n\n// makeOrder('car')\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\n\n//=============//\n\n// const makeOrder = dish => {\n//   const random = Math.random();\n\n//   return random > 0.5 ? Promise.resolve(`sale ${dish}`) : Promise.reject('end');\n\n//   //   if (random > 0.5) {\n//   //     return Promise.resolve(`sale ${dish}`);\n//   //   }\n//   //   return Promise.reject('end');\n// };\n\n// makeOrder('car')\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\n\n//==============//\n\nconst startTime = Date.now();\n\nconst res1 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTime - currentTime;\n      resolve({ title: 'first', time: deltaTime });\n    }, 3000);\n  });\n};\n\nconst res2 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTime - currentTime;\n      resolve({ title: 'second', time: deltaTime });\n    }, 1000);\n  });\n};\n\nconst res3 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTime - currentTime;\n      resolve({ title: 'third', time: deltaTime });\n    }, 6000);\n  });\n};\n\n// Promise.all([res1(), res2(), res3()])\n//     .then(res => console.log(res))\n//     .catch(error => console.log(error))\n//     .finally(() => console.log('finally'));\n\nPromise.race([res1(), res2(), res3()])\n  .then(data => console.log(data))\n  .catch(error => console.log(error))\n  .finally(() => console.log('finally'));\n"],"names":["startTime","res1","resolve","reject","currentTime","deltaTime","res2","res3","data","error"],"mappings":"wFA8IA,MAAMA,EAAY,KAAK,MAEjBC,EAAO,IACJ,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACf,MAAMC,EAAc,KAAK,MACnBC,EAAYL,EAAYI,EAC9BF,EAAQ,CAAE,MAAO,QAAS,KAAMG,CAAW,CAAA,CAC5C,EAAE,GAAI,CACX,CAAG,EAGGC,EAAO,IACJ,IAAI,QAAQ,CAACJ,EAASC,IAAW,CACtC,WAAW,IAAM,CACf,MAAMC,EAAc,KAAK,MACnBC,EAAYL,EAAYI,EAC9BF,EAAQ,CAAE,MAAO,SAAU,KAAMG,CAAW,CAAA,CAC7C,EAAE,GAAI,CACX,CAAG,EAGGE,EAAO,IACJ,IAAI,QAAQ,CAACL,EAASC,IAAW,CACtC,WAAW,IAAM,CACf,MAAMC,EAAc,KAAK,MACnBC,EAAYL,EAAYI,EAC9BF,EAAQ,CAAE,MAAO,QAAS,KAAMG,CAAW,CAAA,CAC5C,EAAE,GAAI,CACX,CAAG,EAQH,QAAQ,KAAK,CAACJ,EAAI,EAAIK,EAAM,EAAEC,EAAI,CAAE,CAAC,EAClC,KAAKC,GAAQ,QAAQ,IAAIA,CAAI,CAAC,EAC9B,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,QAAQ,IAAI,SAAS,CAAC"}